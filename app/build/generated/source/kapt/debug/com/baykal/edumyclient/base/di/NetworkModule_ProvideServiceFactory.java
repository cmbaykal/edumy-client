// Generated by Dagger (https://dagger.dev).
package com.baykal.edumyclient.base.di;

import com.baykal.edumyclient.data.service.EdumyServiceImp;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import io.ktor.client.HttpClient;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("javax.inject.Named")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvideServiceFactory implements Factory<EdumyServiceImp> {
  private final Provider<HttpClient> httpClientProvider;

  public NetworkModule_ProvideServiceFactory(Provider<HttpClient> httpClientProvider) {
    this.httpClientProvider = httpClientProvider;
  }

  @Override
  public EdumyServiceImp get() {
    return provideService(httpClientProvider.get());
  }

  public static NetworkModule_ProvideServiceFactory create(
      Provider<HttpClient> httpClientProvider) {
    return new NetworkModule_ProvideServiceFactory(httpClientProvider);
  }

  public static EdumyServiceImp provideService(HttpClient httpClient) {
    return Preconditions.checkNotNullFromProvides(NetworkModule.INSTANCE.provideService(httpClient));
  }
}
